{"version":3,"sources":["context.tsx","components/mode-controll/mode-controll.tsx","components/black-layer/black-layer.tsx","components/burger/burger.tsx","components/menu-link/menu-link.tsx","config.ts","shared/api.tsx","components/auth-popup/auth-popup.tsx","components/menu/menu.tsx","components/navigation/navigation.tsx","components/header/header.tsx","components/category-card/category-card.tsx","shared/play-audio.tsx","components/card/card.tsx","components/start-repeat-button/start-repeat-button.tsx","components/stars/stars.tsx","components/main-play-field/main-play-field.tsx","shared/mix-array.tsx","components/success-page/success-page.tsx","cards.tsx","components/statistic/statistic.tsx","App.tsx","reportWebVitals.ts","components/admin/admin-header/admin-header.tsx","components/admin/category-card-add/category-card-add.tsx","components/admin/category-card-creator/category-card-creator.tsx","components/admin/category-card-editor/category-card-editor.tsx","components/admin/category-card-view/category-card-view.tsx","components/admin/category-card/category-card.tsx","components/admin/categories-editor-page/categories-editor-page.tsx","components/admin/word-card-add/word-card-add.tsx","components/admin/word-card-creator/word-card-creator.tsx","components/admin/word-card-editor/word-card-editor.tsx","components/admin/word-card-view/word-card-view.tsx","components/admin/word-card/word-card.tsx","components/admin/words-editor-page/words-editor-page.tsx","components/admin/admin-panel/admin-panel.tsx","index.tsx"],"names":["AppModeContext","createContext","appMode","setAppMode","LogedInContext","isLogedIn","setLogedIn","UpdateData","isLoaded","setIsLoaded","ModeControll","useContext","useState","mode","setMode","className","onClick","type","BlackLayer","cb","Burger","MenuLink","category","categoryName","to","config","host","loadFile","data","a","fetch","method","body","auth","login","password","respons","json","getCategories","getWordsByCategory","categoryId","updateCategory","catIt","newCategory","headers","JSON","stringify","deleteCategory","createCategory","updateWordInCategory","word","translation","image","audioSrc","wordId","catId","deleteWordInCategory","createWordInCategory","AuthPopup","setIsShownPopup","isIncorrect","setIsIncorrect","loginInput","useRef","passwordInput","forwardToAdmin","current","value","e","stopPropagation","htmlFor","ref","placeholder","Menu","cat","setCat","isShownPopup","useEffect","links","map","item","id","exact","Navigation","cName","changeClass","openCloseNavigation","Header","CategoryCard","words","setWords","catCards","setCatCards","catData","arrPromis","i","length","push","Promise","all","wordsData","wordsArr","categories","wInx","findIndex","itm","src","alt","filter","playAudio","audio","Audio","preload","audioPromise","play","undefined","then","_","catch","err","console","info","Card","card","isGameStarted","cardsDataMix","currentWord","setcurrentWord","index","setIndex","isFlipped","setIsFlipped","clickedStyle","setClickStyle","cardStyle","addDataToLocalStorage","param","localStorage","getItem","parse","setItem","replace","newArr","slice","clickHandler","onMouseLeave","StartRepeatButton","startGame","Stars","stars","toString","MainPlayField","wordsInCategory","setIsGameStarted","mixedWords","mixWords","gameResult","setGameResult","setTimeout","check","every","elem","arr","array","j","Math","floor","random","t","mixArray","cardsComponentArr","SuccessPage","result","isForward","setisForward","cards","Statistic","train","success","error","percent","line","items","sortConfig","setSortConfig","useMemo","sortableItems","sort","b","key","direction","requestSort","useSortableData","getClassNamesFor","name","App","getWords","Provider","path","component","render","playFieldRender","match","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AdminHeader","page","classCatLink","classWordLink","CategoryCardAdd","isNewCategoryCreating","setCreateNewCategoryMode","CategoryCardCreator","categotyInput","createNewCategory","CategoryCardEditor","setCategoryCardMode","inputRef","updCategory","delCategory","CategoryCardView","wordsQty","categoryCardMode","CategoriesEditorPage","categoriesCard","len","WordCardAdd","isNewWordCreating","setCreateNewWordMode","WordCardCreator","formError","setFormError","audioInput","imgInput","wordData","translateData","sendData","files1","files","files2","wordString","translateString","formData","FormData","audioExtIndex","lastIndexOf","audioExt","append","imageExtIndex","imageExt","WordCardEditor","setWordCardMode","deleteWord","WordCardView","split","WordCard","wordCardMode","WordsEditorPage","WordsCard","AdminPanel","wordsUpd","CategoryEditorRender","redirect","wordsEditorRender","Main","StrictMode","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.50433135.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AppModeContext = createContext({appMode: false, setAppMode: (appMode: boolean) => {}});\n\nexport const LogedInContext = createContext({isLogedIn: false, setLogedIn: (isLogedIn: boolean) => {}});\n\nexport const UpdateData = createContext({isLoaded: false, setIsLoaded: (isLoaded: boolean) => {}});","import React, { useContext, useState } from 'react';\nimport { AppModeContext } from '../../context';\nimport './mode-controll.css';\n\nfunction ModeControll() {\n  const { appMode, setAppMode } = useContext(AppModeContext);\n  const [mode, setMode] = useState(\"game-mode\");\n  const changeMode = () => {\n    if (!appMode) {\n      setAppMode(true);\n      setMode(\"game-mode play\");\n    } else {\n      setAppMode(false);\n      setMode(\"game-mode\");\n    }\n  };\n  return (\n    <div className={mode} onClick={changeMode}>\n      <div className=\"play-mode-title\">Play</div>\n      <div className=\"train-mode-title\">Train</div>\n      <input className=\"checkbox\" type=\"checkbox\"/>\n      <div className=\"mode-controller\"></div>\n    </div>\n  );\n}\n\nexport default ModeControll;","import React from 'react';\nimport './black-layer.css';\n\nfunction BlackLayer({cb}: {cb: () => void}) {\n  return (\n    <div className=\"black-layer\" onClick={() => {cb()}}></div>\n  );\n}\n\nexport default BlackLayer;","import React, { FunctionComponent } from 'react';\nimport './burger.css';\n\ninterface NewBurgerProps {\n  cb: () => void;\n}\n\nexport const Burger: FunctionComponent<NewBurgerProps> = ({ cb }): JSX.Element => {\n  return (\n    <div className=\"menu-button\" onClick = {cb}>\n    <div className=\"cross1\"></div>\n    <div className=\"cross2\"></div>\n    <div className=\"cross3\"></div>\n    <div className=\"cross4\"></div>\n  </div>\n  );\n};\n","import { NavLink } from \"react-router-dom\";\nimport './menu-link.css';\n\nexport function MenuLink({category, cb, categoryName}: any) {\n  \n  return (\n    <li className=\"nav-item\"><NavLink to={'/game/'+category } onClick={() => {cb()}}>{categoryName}</NavLink></li>  \n  );\n}","export const config = {\n  host:'https://mighty-anchorage-06777.herokuapp.com',\n  mediaFolder: '/media',\n  serverFolder: '',\n  hachRouter: true\n}","import {config} from '../config';\n\ninterface Words {\n  catId: number;\n  words: WordFrom[];\n};\n\ninterface WordFrom {\n  id: number;\n  word: string;\n  translation: string;\n  image: string;\n  audioSrc: string;\n}\n\nconst host = config.host;\n\nexport async function loadFile(data: FormData) {\n  await fetch(host + '/upload/', {\n    method: 'POST',\n    body: data\n  });\n}\n\nexport async function auth(login: string, password: string) {\n  const respons = await fetch(host + '/api/auth/' + login + '/pass/' + password);\n  const data = (await respons.json()) as {auth: boolean};\n  return data;\n}\n\nexport async function getCategories() {\n  const respons = await fetch(host + '/api/');\n  const data = (await respons.json()) as {id: number; categoryName: string}[];\n  return data;\n}\n\nexport async function getWordsByCategory(categoryId: number) {\n  const respons = await fetch(host + '/api/category/' + categoryId);\n  const data = (await respons.json()) as Words;\n  return data;\n}\n\nexport async function updateCategory(catIt: number, newCategory: string) {\n  await fetch(host + '/api/' + catIt, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify({category: newCategory})\n  });\n}\n\nexport async function deleteCategory(catIt: number) {\n  await fetch(host + '/api/' + catIt, {\n    method: 'DELETE',\n  })\n}\n\nexport async function createCategory(newCategory: string) {\n  await fetch(host + '/api/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify({category: newCategory})\n  });\n}\n\nexport async function updateWordInCategory(word:string, translation:string, image:string, audioSrc:string, wordId: number, catId: number) {\n  await fetch(host + '/api/category/' + catId + '/word/' + wordId, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify({word, translation, image, audioSrc})\n  });\n}\n\nexport async function deleteWordInCategory(wordId: number, catId: number) {\n  await fetch(host + '/api/category/' + catId + '/word/' + wordId, {\n    method: 'DELETE'\n  });\n\n}\n\nexport async function createWordInCategory(word:string, translation:string, image:string, audioSrc:string, catId: number) {\n  await fetch(host + '/api/category/' + catId, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify({word, translation, image, audioSrc})\n  });\n}\n","import { Dispatch, useContext, useRef, useState } from \"react\";\nimport { LogedInContext } from \"../../context\";\nimport { auth } from \"../../shared/api\";\nimport './auth-popup.css';\n\nexport function AuthPopup({setIsShownPopup}: {setIsShownPopup: Dispatch<React.SetStateAction<boolean>>}) {\n  const {setLogedIn} = useContext(LogedInContext);\n  const [isIncorrect, setIsIncorrect] = useState(false);\n\n  const loginInput = useRef<HTMLInputElement>(null);\n\n  const passwordInput = useRef<HTMLInputElement>(null);\n\n  const forwardToAdmin = async () => {\n    const login = loginInput.current?.value as string;\n    const password = passwordInput.current?.value as string;\n    const result = await auth(login, password);\n    if (!result.auth) {\n      if (!isIncorrect) setIsIncorrect(true);\n    } else {\n      setLogedIn(true);\n    }\n  };\n\n  return (\n    <div className=\"auth-popup\">\n      <div className=\"auth-popup-wrapper\" onClick={() => {setIsShownPopup(false)}}>\n        <div className=\"auth-popup-window\" onClick={(e) => {e.stopPropagation()}}>\n          <div className=\"auth-popup-window-wrapper\">\n            <h2 className=\"auth-popup-window-h2\">Login</h2>\n            <p className=\"auth-popup-window-information\"><b className=\"auth-popup-window-important\">Important: </b>For testing use login: <b>admin</b> and password: <b>admin</b></p>\n            <div className=\"auth-popup-window-input-lable\">\n              <label htmlFor=\"\" className=\"auth-popup-window-lable\">Login</label>\n              <input type=\"text\" ref={loginInput} className=\"auth-popup-window-input\" placeholder=\"username\"/>\n            </div>\n            <div className=\"auth-popup-window-input-lable\">\n              <label htmlFor=\"\" className=\"auth-popup-window-lable\">Password</label>\n              <input type=\"password\" ref={passwordInput} className=\"auth-popup-window-input\" placeholder=\"password\"/>\n            </div>\n            {isIncorrect && <p className=\"auth-popup-window-information\"><b className=\"auth-popup-window-important\">Login or password is incorrect</b></p>}\n            <div className=\"auth-popup-window-controls\">\n              <button className=\"auth-popup-window-cancel-btn\" onClick={() => {setIsShownPopup(false)}}>Cancel</button>\n              <button className=\"auth-popup-window-login-btn\" onClick={forwardToAdmin}>Login</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import './menu.css';\nimport { NavLink } from 'react-router-dom';\nimport { MenuLink } from '../menu-link/menu-link';\nimport { useEffect, useState } from 'react';\nimport { getCategories } from '../../shared/api';\nimport { AuthPopup } from '../auth-popup/auth-popup';\n\nfunction Menu({cb}: {cb: () => void}) {\n  const [cat, setCat] = useState([] as {id: number; categoryName: string}[]);\n  const [isShownPopup, setIsShownPopup] = useState(false);\n  \n  useEffect(() => {\n    (async function() {\n      const data = await getCategories();\n      setCat(data);\n    }) ();\n  }, []);\n\n  const links = cat.map((item) => {\n    return <MenuLink cb={cb} key={item.id} category = {item.id} categoryName = {item.categoryName}/>;\n  });\n\n\n  return (\n    <ul className=\"nav\">\n      <li className=\"nav-item main\"><NavLink exact to=\"/\" onClick={() => {cb()}}>Main page</NavLink></li>\n      {links}\n      <li className=\"nav-item stat\"><NavLink to=\"/statistic\" onClick={() => {cb()}}>Statistic</NavLink></li>\n      <button onClick={() => {cb(); setIsShownPopup(true)}} className=\"menu-log-in-button\">Log in</button>\n      {isShownPopup && <AuthPopup setIsShownPopup={setIsShownPopup}/>}\n    </ul>\n  );\n}\n\nexport default Menu;","import React, { useState } from 'react';\nimport BlackLayer from '../black-layer/black-layer';\nimport { Burger } from '../burger/burger';\nimport Menu from '../menu/menu';\nimport './navigation.css';\n\nfunction Navigation() {\n  const [cName, changeClass] = useState(\"menu\");\n  const openCloseNavigation = (): void => {\n    if (cName === \"menu\") {\n      changeClass(\"menu open\");\n    } else {\n      changeClass(\"menu\");\n    }\n  }\n\n  return (\n    <nav className={cName}>\n      <Burger cb={openCloseNavigation} />\n      <BlackLayer cb={openCloseNavigation} />\n      <Menu cb={openCloseNavigation}/>\n    </nav>\n  );\n}\n\nexport default Navigation;","import React from 'react';\nimport ModeControll from '../mode-controll/mode-controll';\nimport Navigation from '../navigation/navigation';\nimport './header.css';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <Navigation />\n      <ModeControll />\n    </header>\n  );\n}\n\nexport default Header;","import { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { getCategories, getWordsByCategory } from \"../../shared/api\";\nimport './category-card.css'\nimport {config} from '../../config';\n\ninterface Words {\n  catId: number;\n  words: WordFrom[];\n};\n\ninterface WordFrom {\n  id: number;\n  word: string;\n  translation: string;\n  image: string;\n  audioSrc: string;\n}\n\nexport function CategoryCard() {\n  const [cat, setCat] = useState([] as {id: number; categoryName: string}[]);\n  const [words, setWords] = useState<Words[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [catCards, setCatCards] = useState<(JSX.Element | null)[]>([<div key=\"1\">Loading</div>]);\n\n  useEffect(() => {\n    (async function() {\n      const catData = await getCategories();\n      setCat(catData);\n    }) ();\n  }, []);\n\n  useEffect(() => {\n    (async function() {\n      const arrPromis = [];\n      for (let i = 0; i < cat.length; i++) {\n        arrPromis.push(getWordsByCategory(cat[i].id));\n      }\n      const wordsData = await Promise.all(arrPromis);\n      setWords(wordsData);\n      setIsLoaded(true);\n    }) ();\n  }, [cat]);\n\n  useEffect(() => {\n    if (isLoaded) {\n    const wordsArr = words as Words[];\n    const categories = cat.map((category, i) => {\n      const wInx = wordsArr.findIndex(itm => itm.catId === category.id);\n      if (wordsArr[wInx].words.length > 0) {\n      return (\n        <NavLink key={category.id} to={'/game/'+category.id} className=\"category-link\">\n          <div className=\"category\" >\n            <div className=\"categoty-img-wrapper\">\n              <img src={config.host + config.mediaFolder + \"/\" + wordsArr[wInx].words[0].image} alt={category.categoryName} />\n              <div className=\"category-name\"><span>{category.categoryName}</span></div>\n            </div>\n          </div>\n        </NavLink>\n      );\n      } else return null;\n    }).filter(item => item !== null);\n    setCatCards(categories);\n  }\n  }, [words]);\n\n  return (\n    <main className=\"main-section\">\n      <div className=\"info\">Уважаемый Проверяющий, если нужно сбросить бэк к начальным значениям - пиши.</div>\n      <div className=\"cards-container\">\n        {catCards}\n      </div>\n    </main>\n  );\n}","export function playAudio(audioSrc: string) {\n    let audio = new Audio();\n    audio.preload = 'auto';\n    audio.src = audioSrc;\n    const audioPromise = audio.play()\n    if (audioPromise !== undefined) {\n      audioPromise\n        .then(_ => {\n          // autoplay started\n        })\n        .catch(err => {\n          // catch dom exception\n          console.info(err)\n        })\n    }\n  }","import { Dispatch, useContext, useEffect, useState } from 'react';\nimport { AppModeContext } from '../../context';\nimport { playAudio } from '../../shared/play-audio';\nimport './card.css';\nimport {config} from '../../config';\n\ninterface WordFrom {\n  id: number;\n  word: string;\n  translation: string;\n  image: string;\n  audioSrc: string;\n}\n\ninterface CardProps {\n  card: WordFrom;\n  isGameStarted: number;\n  cardsDataMix: WordFrom[];\n  currentWord: boolean[];\n  setcurrentWord: Dispatch<React.SetStateAction<boolean[]>>;\n  index: number;\n  setIndex: Dispatch<React.SetStateAction<number>>;\n  category: string;\n}\n\ninterface LoccalStorageData {\n  [word: string]: {\n    [train: string]: number;\n  }\n}\n\nexport function Card({card, isGameStarted, cardsDataMix, currentWord, setcurrentWord, index, setIndex, category}: CardProps) {\n\n  const { appMode } = useContext(AppModeContext);\n\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  const [clickedStyle, setClickStyle] = useState('not-clicked');\n\n  let cardStyle = \"card-container\";\n\n  useEffect(() => {\n    setClickStyle('not-clicked');\n  }, [appMode, category]);\n\n  const setStyles = () => {\n    if (isFlipped) {\n      cardStyle = cardStyle + ' flipped';\n    } else {\n      cardStyle = cardStyle.replace(' flipped', '');\n    }\n    if (appMode) {\n      cardStyle = cardStyle + ' play';\n    } else {\n      cardStyle = cardStyle.replace(' play', '');\n    }\n    return cardStyle;\n  };\n\n  const clickHandler = () => {\n    if (clickedStyle === 'not-clicked visible') return;\n    if (isGameStarted === 1) {\n      if (cardsDataMix[index].word === card.word) {\n        setIndex(index + 1);\n        currentWord.push(true);\n        addDataToLocalStorage(category, card.word, 'success');\n        let newArr = currentWord.slice(0);\n        setcurrentWord(newArr);\n        setClickStyle('not-clicked visible');\n      } else {\n        currentWord.push(false);\n        addDataToLocalStorage(category, cardsDataMix[index].word, 'error');\n        let newArr = currentWord.slice(0);\n        setcurrentWord(newArr);\n      }\n    } else if (isGameStarted === 0) {\n      if(!appMode) {\n        addDataToLocalStorage(category, card.word, 'train');\n        playAudio(config.host + config.mediaFolder + '/' + card.audioSrc);\n      }\n    }\n  }\n\n  const addDataToLocalStorage = (category: string, word: string, param: string) => {\n    if (localStorage.getItem(category)) { \n      let data = (JSON.parse(localStorage.getItem(category) as string)) as LoccalStorageData;\n      if (data[word]){\n        data[word][param] += 1;\n        localStorage.setItem(category, JSON.stringify(data));\n      } else {\n        data[word] = {\n          'train': 0,\n          'error': 0,\n          'success': 0\n        }\n        data[word][param] += 1;\n        localStorage.setItem(category, JSON.stringify(data));\n      }\n    } else {\n      let data: LoccalStorageData = {\n        [word]: {\n          \"train\": 0,\n          \"error\": 0,\n          \"success\": 0,\n        }\n      };\n      data[word][param] += 1;\n      localStorage.setItem(category, JSON.stringify(data));\n    }\n  }\n  \n  return (\n    <div className={setStyles()} onClick={() => clickHandler()}  onMouseLeave={() => setIsFlipped(false)}>\n      <div className=\"card\" >  \n        <div className=\"card-front\">\n          <div className=\"card-img-wrapper\">\n            <div className={clickedStyle}></div>\n            <img src={config.host + config.mediaFolder + \"/\" + card.image} alt=\"Action-set-a\" />\n            <div className=\"card-name\"><span>{card.word}</span></div>\n            <div className=\"rotate-controller\" onClick={() => setIsFlipped(true)}></div>\n          </div>\n        </div>\n        <div className=\"card-back\">\n          <div className=\"card-img-wrapper\">\n            <img src={config.host + config.mediaFolder + \"/\" + card.image} alt=\"Action-set-a\" />\n            <div className=\"card-name\"><span>{card.translation}</span></div>\n          </div>\n        </div>\n      </div>\n  </div>\n  );\n}","import { Dispatch, SetStateAction } from 'react';\nimport { CardData } from '../../interfaces';\nimport { playAudio } from '../../shared/play-audio';\nimport { config } from '../../config';\nimport './start-repeat-button.css';\n\ninterface  StartGameFunction{\n  appMode: boolean\n  isGameStarted: number;\n  startGame: Dispatch<SetStateAction<number>>;\n  currentWord: boolean[];\n  cardsDataMix: CardData[];\n  index: number;\n}\n\nexport const StartRepeatButton = ({appMode, isGameStarted, startGame, currentWord, cardsDataMix, index}: StartGameFunction): JSX.Element => {\n\n  const startHandler = () => {\n    if (isGameStarted === 0) {\n      startGame(1);\n      playAudio(config.host + config.mediaFolder + '/' + cardsDataMix[0].audioSrc);\n    } else if(isGameStarted === 1) {\n      playAudio(config.host + config.mediaFolder + '/' + cardsDataMix[index].audioSrc);\n    }\n  };\n\n  const changeButtonName = () => {\n    if (isGameStarted === 0) return 'start-repeat-button';\n    if (isGameStarted === 1) return 'start-repeat-button game';\n  };\n\n  const thisButtonVisibility = () => {\n    if (!appMode) {\n      return 'button-visibility';\n    }\n    return '';\n  }\n\n  return (\n    <div className={thisButtonVisibility()}>\n      <div className={changeButtonName()} onClick={() => {startHandler()}}>\n        <div className=\"start-button\"><div>Start</div></div>\n        <div className=\"repeat-button\"></div>\n      </div>\n    </div>\n  );\n}","interface ForStars {\n  currentWord: boolean[];\n}\n\nexport function Stars({currentWord}: ForStars) {\n\n  let stars = [];\n  for (let i = 0; i < currentWord.length; i++) {\n    if (currentWord[i]) {\n      stars.push(<img key={i.toString()} src=\"/img/star-win.svg\" alt=\"ok\"/>);\n    } else stars.push(<img key={i.toString()} src=\"/img/star.svg\" alt=\"ok\"/>);\n  }\n  return (\n    <div className=\"stars\">{stars}</div>\n  );\n}","import { useContext, useEffect, useState } from 'react';\nimport { AppModeContext } from '../../context';\nimport { Card } from '../card/card';\nimport { StartRepeatButton } from '../start-repeat-button/start-repeat-button';\nimport { Stars } from '../stars/stars';\nimport './main-play-field.css';\nimport { mixArray } from '../../shared/mix-array';\nimport { playAudio } from '../../shared/play-audio';\nimport { Redirect } from 'react-router-dom';\nimport {config} from '../../config';\n\ninterface WordFrom {\n  id: number;\n  word: string;\n  translation: string;\n  image: string;\n  audioSrc: string;\n}\n\nexport function MainPlayField({category, wordsInCategory}: {category: string; wordsInCategory: WordFrom[]}) {\n\n  const { appMode } = useContext(AppModeContext);\n\n  const [isGameStarted, setIsGameStarted] = useState(0);\n\n  const [currentWord, setcurrentWord] = useState([] as boolean[]);\n\n  const [mixedWords, mixWords] = useState([] as WordFrom[]);\n\n  const [gameResult, setGameResult] = useState('');\n\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    if (isGameStarted === 1) {\n      setIsGameStarted(0);\n    }\n    setcurrentWord([]);\n    setIndex(0);\n  }, [appMode, category]);\n\n  useEffect(() => {\n    if (index < 8) {\n      if (isGameStarted === 1) {\n      (async function() {\n        if (currentWord[currentWord.length - 1]) {\n          playAudio('/audio/correct.mp3');\n          await setTimeout(()=>{\n            playAudio(config.host + config.mediaFolder + '/' + mixedWords[index].audioSrc);\n          }, 1000);\n        } else {\n            playAudio('/audio/error.mp3');\n        }\n      })();\n      }\n    } else {\n      let check = currentWord.every((elem) => {\n        if (elem) return true \n        else return false;\n      });\n      if (check) setGameResult('success');\n      else setGameResult('failure');\n      (async function() {\n        await setTimeout(()=>{\n          setIsGameStarted(2);\n        }, 1000);\n      })();\n    }\n  }, [currentWord]);\n\n\n  useEffect(() => {\n    const cardsDataMix = mixArray(wordsInCategory);\n    mixWords(cardsDataMix);\n  }, [category, appMode]);\n\n  const cardsComponentArr = wordsInCategory.map((card) => {\n    return (\n      <Card \n        key={card.id}\n        card={card} \n        isGameStarted={isGameStarted} \n        cardsDataMix={mixedWords} \n        currentWord={currentWord} \n        setcurrentWord={setcurrentWord}\n        index={index}\n        setIndex={setIndex}\n        category={category}\n      />\n    );\n  });\n\n  return (\n    <main className=\"game-section\">\n      <div className=\"place-for-stars\"><Stars currentWord={currentWord}/></div>\n      <div className=\"cards-game-container\">\n        {cardsComponentArr}\n      </div>\n      <StartRepeatButton \n        appMode={appMode}\n        isGameStarted={isGameStarted} \n        startGame={setIsGameStarted} \n        currentWord={currentWord} \n        cardsDataMix={mixedWords}\n        index={index}\n      />\n      { isGameStarted === 2 ? <Redirect to={\"/gameover/\" + gameResult} />: '' }\n    </main>\n  );\n}","interface WordFrom {\n  id: number;\n  word: string;\n  translation: string;\n  image: string;\n  audioSrc: string;\n}\n\nexport function mixArray(arr: WordFrom[]): WordFrom[] {\n  const array = arr.slice(0);\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    let t = array[i]; \n    array[i] = array[j];\n    array[j] = t;\n  }\n  return array;\n}","import { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { playAudio } from \"../../shared/play-audio\";\n\nexport function SuccessPage ({result}: {result: string}) {\n  const [isForward, setisForward] = useState(false);\n\n  useEffect(() => {\n    (async function() {\n      playAudio(`/audio/${result}.mp3`);\n      await setTimeout(() => {\n        setisForward(true);\n      }, 3000);\n    }())\n  }, []);\n\n  return (\n    <div>\n      <img src={\"/img/\" + result + '.jpg'} alt={result} />\n      { isForward ? <Redirect to=\"/\" /> : '' }\n    </div>\n  );\n}","const cards = [ \r\n    ['Action (set A)', 'Action (set B)', 'Animal (set A)', 'Animal (set B)', 'Clothes', 'Emotions', 'Fruits', 'Birds'],\r\n    [\r\n      {\r\n        word: 'cry',\r\n        translation: 'плакать',\r\n        image: 'img/cry.jpg',\r\n        audioSrc: 'audio/cry.mp3'\r\n      },\r\n      {\r\n        word: 'dance',\r\n        translation: 'танцевать',\r\n        image: 'img/dance.jpg',\r\n        audioSrc: 'audio/dance.mp3'\r\n      },\r\n      {\r\n        word: 'dive',\r\n        translation: 'нырять',\r\n        image: 'img/dive.jpg',\r\n        audioSrc: 'audio/dive.mp3'\r\n      },\r\n      {\r\n        word: 'draw',\r\n        translation: 'рисовать',\r\n        image: 'img/draw.jpg',\r\n        audioSrc: 'audio/draw.mp3'\r\n      },\r\n      {\r\n        word: 'fish',\r\n        translation: 'ловить рыбу',\r\n        image: 'img/fish.jpg',\r\n        audioSrc: 'audio/fish.mp3'\r\n      },\r\n      {\r\n        word: 'fly',\r\n        translation: 'летать',\r\n        image: 'img/fly.jpg',\r\n        audioSrc: 'audio/fly.mp3'\r\n      },\r\n      {\r\n        word: 'hug',\r\n        translation: 'обнимать',\r\n        image: 'img/hug.jpg',\r\n        audioSrc: 'audio/hug.mp3'\r\n      },\r\n      {\r\n        word: 'jump',\r\n        translation: 'прыгать',\r\n        image: 'img/jump.jpg',\r\n        audioSrc: 'audio/jump.mp3'\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        word: 'open',\r\n        translation: 'открывать',\r\n        image: 'img/open.jpg',\r\n        audioSrc: 'audio/open.mp3'\r\n      },\r\n      {\r\n        word: 'play',\r\n        translation: 'играть',\r\n        image: 'img/play.jpg',\r\n        audioSrc: 'audio/play.mp3'\r\n      },\r\n      {\r\n        word: 'point',\r\n        translation: 'указывать',\r\n        image: 'img/point.jpg',\r\n        audioSrc: 'audio/point.mp3'\r\n      },\r\n      {\r\n        word: 'ride',\r\n        translation: 'ездить',\r\n        image: 'img/ride.jpg',\r\n        audioSrc: 'audio/ride.mp3'\r\n      },\r\n      {\r\n        word: 'run',\r\n        translation: 'бегать',\r\n        image: 'img/run.jpg',\r\n        audioSrc: 'audio/run.mp3'\r\n      },\r\n      {\r\n        word: 'sing',\r\n        translation: 'петь',\r\n        image: 'img/sing.jpg',\r\n        audioSrc: 'audio/sing.mp3'\r\n      },\r\n      {\r\n        word: 'skip',\r\n        translation: 'пропускать, прыгать',\r\n        image: 'img/skip.jpg',\r\n        audioSrc: 'audio/skip.mp3'\r\n      },\r\n      {\r\n        word: 'swim',\r\n        translation: 'плавать',\r\n        image: 'img/swim.jpg',\r\n        audioSrc: 'audio/swim.mp3'\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        word: 'cat',\r\n        translation: 'кот',\r\n        image: 'img/cat.jpg',\r\n        audioSrc: 'audio/cat.mp3'\r\n      },\r\n      {\r\n        word: 'chick',\r\n        translation: 'цыплёнок',\r\n        image: 'img/chick.jpg',\r\n        audioSrc: 'audio/chick.mp3'\r\n      },\r\n      {\r\n        word: 'chicken',\r\n        translation: 'курица',\r\n        image: 'img/chicken.jpg',\r\n        audioSrc: 'audio/chicken.mp3'\r\n      },\r\n      {\r\n        word: 'dog',\r\n        translation: 'собака',\r\n        image: 'img/dog.jpg',\r\n        audioSrc: 'audio/dog.mp3'\r\n      },\r\n      {\r\n        word: 'horse',\r\n        translation: 'лошадь',\r\n        image: 'img/horse.jpg',\r\n        audioSrc: 'audio/horse.mp3'\r\n      },\r\n      {\r\n        word: 'pig',\r\n        translation: 'свинья',\r\n        image: 'img/pig.jpg',\r\n        audioSrc: 'audio/pig.mp3'\r\n      },\r\n      {\r\n        word: 'rabbit',\r\n        translation: 'кролик',\r\n        image: 'img/rabbit.jpg',\r\n        audioSrc: 'audio/rabbit.mp3'\r\n      },\r\n      {\r\n        word: 'sheep',\r\n        translation: 'овца',\r\n        image: 'img/sheep.jpg',\r\n        audioSrc: 'audio/sheep.mp3'\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        word: 'bird',\r\n        translation: 'птица',\r\n        image: 'img/bird.jpg',\r\n        audioSrc: 'audio/bird.mp3'\r\n      },\r\n      {\r\n        word: 'fish',\r\n        translation: 'рыба',\r\n        image: 'img/fish1.jpg',\r\n        audioSrc: 'audio/fish.mp3'\r\n      },\r\n      {\r\n        word: 'frog',\r\n        translation: 'жаба',\r\n        image: 'img/frog.jpg',\r\n        audioSrc: 'audio/frog.mp3'\r\n      },\r\n      {\r\n        word: 'giraffe',\r\n        translation: 'жирафа',\r\n        image: 'img/giraffe.jpg',\r\n        audioSrc: 'audio/giraffe.mp3'\r\n      },\r\n      {\r\n        word: 'lion',\r\n        translation: 'лев',\r\n        image: 'img/lion.jpg',\r\n        audioSrc: 'audio/lion.mp3'\r\n      },\r\n      {\r\n        word: 'mouse',\r\n        translation: 'мышь',\r\n        image: 'img/mouse.jpg',\r\n        audioSrc: 'audio/mouse.mp3'\r\n      },\r\n      {\r\n        word: 'turtle',\r\n        translation: 'черепаха',\r\n        image: 'img/turtle.jpg',\r\n        audioSrc: 'audio/turtle.mp3'\r\n      },\r\n      {\r\n        word: 'dolphin',\r\n        translation: 'дельфин',\r\n        image: 'img/dolphin.jpg',\r\n        audioSrc: 'audio/dolphin.mp3'\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        word: 'skirt',\r\n        translation: 'юбка',\r\n        image: 'img/skirt.jpg',\r\n        audioSrc: 'audio/skirt.mp3'\r\n      },\r\n      {\r\n        word: 'pants',\r\n        translation: 'брюки',\r\n        image: 'img/pants.jpg',\r\n        audioSrc: 'audio/pants.mp3'\r\n      },\r\n      {\r\n        word: 'blouse',\r\n        translation: 'блузка',\r\n        image: 'img/blouse.jpg',\r\n        audioSrc: 'audio/blouse.mp3'\r\n      },\r\n      {\r\n        word: 'dress',\r\n        translation: 'платье',\r\n        image: 'img/dress.jpg',\r\n        audioSrc: 'audio/dress.mp3'\r\n      },\r\n      {\r\n        word: 'boot',\r\n        translation: 'ботинок',\r\n        image: 'img/boot.jpg',\r\n        audioSrc: 'audio/boot.mp3'\r\n      },\r\n      {\r\n        word: 'shirt',\r\n        translation: 'рубашка',\r\n        image: 'img/shirt.jpg',\r\n        audioSrc: 'audio/shirt.mp3'\r\n      },\r\n      {\r\n        word: 'coat',\r\n        translation: 'пальто',\r\n        image: 'img/coat.jpg',\r\n        audioSrc: 'audio/coat.mp3'\r\n      },\r\n      {\r\n        word: 'shoe',\r\n        translation: 'туфли',\r\n        image: 'img/shoe.jpg',\r\n        audioSrc: 'audio/shoe.mp3'\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        word: 'sad',\r\n        translation: 'грустный',\r\n        image: 'img/sad.jpg',\r\n        audioSrc: 'audio/sad.mp3'\r\n      },\r\n      {\r\n        word: 'angry',\r\n        translation: 'сердитый',\r\n        image: 'img/angry.jpg',\r\n        audioSrc: 'audio/angry.mp3'\r\n      },\r\n      {\r\n        word: 'happy',\r\n        translation: 'счастливый',\r\n        image: 'img/happy.jpg',\r\n        audioSrc: 'audio/happy.mp3'\r\n      },\r\n      {\r\n        word: 'tired',\r\n        translation: 'уставший',\r\n        image: 'img/tired.jpg',\r\n        audioSrc: 'audio/tired.mp3'\r\n      },\r\n      {\r\n        word: 'surprised',\r\n        translation: 'удивлённый',\r\n        image: 'img/surprised.jpg',\r\n        audioSrc: 'audio/surprised.mp3'\r\n      },\r\n      {\r\n        word: 'scared',\r\n        translation: 'испуганный',\r\n        image: 'img/scared.jpg',\r\n        audioSrc: 'audio/scared.mp3'\r\n      },\r\n      {\r\n        word: 'smile',\r\n        translation: 'улыбка',\r\n        image: 'img/smile.jpg',\r\n        audioSrc: 'audio/smile.mp3'\r\n      },\r\n      {\r\n        word: 'laugh',\r\n        translation: 'смех',\r\n        image: 'img/laugh.jpg',\r\n        audioSrc: 'audio/laugh.mp3'\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        word: 'apple',\r\n        translation: 'яблоко',\r\n        image: 'img/apple.jpg',\r\n        audioSrc: 'audio/apple.mp3'\r\n      },\r\n      {\r\n        word: 'banana',\r\n        translation: 'банан',\r\n        image: 'img/banana.jpg',\r\n        audioSrc: 'audio/banana.mp3'\r\n      },\r\n      {\r\n        word: 'kiwi',\r\n        translation: 'киви',\r\n        image: 'img/kiwi.jpg',\r\n        audioSrc: 'audio/kiwi.mp3'\r\n      },\r\n      {\r\n        word: 'lemon',\r\n        translation: 'лемон',\r\n        image: 'img/lemon.jpg',\r\n        audioSrc: 'audio/lemon.mp3'\r\n      },\r\n      {\r\n        word: 'mango',\r\n        translation: 'манго',\r\n        image: 'img/mango.jpg',\r\n        audioSrc: 'audio/mango.mp3'\r\n      },\r\n      {\r\n        word: 'orange',\r\n        translation: 'апельсин',\r\n        image: 'img/orange.jpg',\r\n        audioSrc: 'audio/orange.mp3'\r\n      },\r\n      {\r\n        word: 'pear',\r\n        translation: 'груша',\r\n        image: 'img/pear.jpg',\r\n        audioSrc: 'audio/pear.mp3'\r\n      },\r\n      {\r\n        word: 'pineapple',\r\n        translation: 'ананас',\r\n        image: 'img/pineapple.jpg',\r\n        audioSrc: 'audio/pineapple.mp3'\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        word: 'chicken',\r\n        translation: 'курица',\r\n        image: 'img/chicken.jpg',\r\n        audioSrc: 'audio/chicken.mp3'\r\n      },\r\n      {\r\n        word: 'crow',\r\n        translation: 'ворон',\r\n        image: 'img/crow.jpg',\r\n        audioSrc: 'audio/crow.mp3'\r\n      },\r\n      {\r\n        word: 'eagle',\r\n        translation: 'орел',\r\n        image: 'img/eagle.jpg',\r\n        audioSrc: 'audio/eagle.mp3'\r\n      },\r\n      {\r\n        word: 'ostrich',\r\n        translation: 'страус',\r\n        image: 'img/ostrich.jpg',\r\n        audioSrc: 'audio/ostrich.mp3'\r\n      },\r\n      {\r\n        word: 'parrot',\r\n        translation: 'попугай',\r\n        image: 'img/parrot.jpg',\r\n        audioSrc: 'audio/parrot.mp3'\r\n      },\r\n      {\r\n        word: 'seagull',\r\n        translation: 'чайка',\r\n        image: 'img/seagull.jpg',\r\n        audioSrc: 'audio/seagull.mp3'\r\n      },\r\n      {\r\n        word: 'sparrow',\r\n        translation: 'воробей',\r\n        image: 'img/sparrow.jpg',\r\n        audioSrc: 'audio/sparrow.mp3'\r\n      },\r\n      {\r\n        word: 'woodpecker',\r\n        translation: 'дятел',\r\n        image: 'img/woodpecker.jpg',\r\n        audioSrc: 'audio/woodpecker.mp3'\r\n      }\r\n    ]\r\n  ]\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  export default cards;","import { useMemo, useState } from 'react';\nimport cards from '../../cards';\nimport { CardData } from '../../interfaces';\nimport './statistic.css';\n\ninterface LoccalStorageData {\n  [word: string]: {\n    [train: string]: number;\n  }\n}\nconst useSortableData = (items: { [category: string]: string; word: string; translation: string; train: string; success: string; error: string; percent: string; }[], config: null | {key: string; direction: string} = null) => {\n  const [sortConfig, setSortConfig] = useState(config);\n\n  const sortedItems = useMemo(() => {\n    let sortableItems = [...items];\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const requestSort = (key: string) => {\n    let direction = 'ascending';\n    if (\n      sortConfig &&\n      sortConfig.key === key &&\n      sortConfig.direction === 'ascending'\n    ) {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  return { items: sortedItems, requestSort, sortConfig };\n};\n\nexport function Statistic() {\n  const categories = cards[0] as string[];\n  const words = (cards.slice(1)) as unknown as CardData[][];\n  let arr: {\n    category: string;\n    word: string;\n    translation: string;\n    train: string;\n    success: string;\n    error: string;\n    percent: string\n  }[] = [];\n  for (let i = 0; i < categories.length; i++) {\n    for (let j = 0; j < words[i].length; j++) {\n      let train: string;\n      let success: string;\n      let error: string;\n      let percent: string;\n      if (localStorage.getItem(i.toString())) {\n        let data = (JSON.parse(localStorage.getItem(i.toString()) as string)) as LoccalStorageData;\n        if (data[words[i][j].word]) {\n          train = (data[words[i][j].word]['train']).toString();\n          success = (data[words[i][j].word]['success']).toString();\n          error = (data[words[i][j].word]['error']).toString();\n          percent = (((+success) / ((+success) + (+error))) * 100).toString();\n          percent = percent !== 'NaN'? percent: \"no data\";\n        } else {\n          train = '0';\n          success = '0';\n          error = '0';\n          percent = '0';\n        }\n      } else {\n        train = '0';\n        success = '0';\n        error = '0';\n        percent = '0';\n      }\n      let line = {\n        category: categories[i],\n        word: words[i][j].word,\n        translation: words[i][j].translation,\n        train,\n        success,\n        error,\n        percent,\n      }\n      arr.push(line);\n    }\n  }\n  const { items, requestSort, sortConfig } = useSortableData(arr);\n\n  const getClassNamesFor = (name: string) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  return (\n    <table>\n      <caption>Statistic</caption>\n      <thead>\n        <tr>\n          <th onClick={() => {requestSort('category')}} className={getClassNamesFor('category')}>Category</th>\n          <th onClick={() => {requestSort('word')}} className={getClassNamesFor('word')}>Word</th>\n          <th onClick={() => {requestSort('translation')}} className={getClassNamesFor('translation')}>Translation</th>\n          <th onClick={() => {requestSort('train')}} className={getClassNamesFor('train')}>Train</th>\n          <th onClick={() => {requestSort('success')}} className={getClassNamesFor('success')}>Success</th>\n          <th onClick={() => {requestSort('error')}} className={getClassNamesFor('error')}>Error</th>\n          <th>%</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map((word, i) => (\n          <tr key={i}>\n            <td>{word.category}</td>\n            <td>{word.word}</td>\n            <td>{word.translation}</td>\n            <td>{word.train}</td>\n            <td>{word.success}</td>\n            <td>{word.error}</td>\n            <td>{word.percent}</td>\n          </tr>\n        ))}\n      </tbody>\n  </table>\n  );\n}","import Header from './components/header/header';\nimport { Switch, Route } from 'react-router-dom';\nimport { CategoryCard } from './components/category-card/category-card';\nimport { MainPlayField } from './components/main-play-field/main-play-field';\nimport { SuccessPage } from './components/success-page/success-page';\nimport { Statistic } from './components/statistic/statistic';\nimport { AppModeContext } from './context';\nimport { useEffect, useState } from 'react';\nimport { getCategories, getWordsByCategory } from './shared/api';\n\ninterface Words {\n  catId: number;\n  words: WordFrom[];\n};\n\ninterface WordFrom {\n  id: number;\n  word: string;\n  translation: string;\n  image: string;\n  audioSrc: string;\n}\n\nfunction App() {\n  const [appMode, setAppMode] = useState(false);\n  const [cat, setCat] = useState([] as {id: number; categoryName: string}[]);\n  const [words, setWords] = useState<Words[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    (async function() {\n      const catData = await getCategories();\n      setCat(catData);\n    }) ();\n  },[]);\n\n  useEffect(() => {\n    async function getWords () {\n      const arrPromis = [];\n      for (let i = 0; i < cat.length; i++) {\n        arrPromis.push(getWordsByCategory(cat[i].id));\n      }\n      const wordsData = await Promise.all(arrPromis);\n      setWords(wordsData);\n      setIsLoaded(true);\n    };\n    if (cat.length) {\n      getWords ()\n    }\n  }, [cat]);\n\n  const playFieldRender = (category: string) => {\n    const cat = +category;\n    if (!isLoaded) {\n      return (<div>Loading</div>);\n    }\n    const index = words.findIndex(elem => elem.catId === cat);\n    const wordsInCategory = words[index].words;\n    return (<MainPlayField category={category} wordsInCategory={wordsInCategory}/>)\n  }\n\n  return (\n    <AppModeContext.Provider value={{appMode, setAppMode}}>\n        <div className=\"App\">\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={CategoryCard} />\n            <Route path=\"/game/:category\" render={({match})=> playFieldRender(match.params.category)}  />\n            <Route path=\"/gameover/:success\" render={({match}) => <SuccessPage result={match.params.success} />} />\n            <Route path=\"/statistic\" component={Statistic} />\n          </Switch>\n        </div>\n    </AppModeContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { LogedInContext } from '../../../context';\nimport './admin-header.css';\n\nexport function AdminHeader({page}: {page: string}) {\n  const { setLogedIn } = useContext(LogedInContext);\n  let classCatLink = '';\n  let classWordLink = '';\n  if (page === \"category\") {\n    classCatLink = ' category-edit';\n  }\n\n  if (page === \"word\") {\n    classWordLink = ' category-edit';\n  }\n\n  return (\n    <header className=\"admin-header\">\n      <ul className=\"admin-nav\">\n        <li className={'admin-link' + classCatLink}><div>Categories</div></li>\n        <li className={'admin-link' + classWordLink}>Words</li>\n      </ul>\n      <div className=\"logout\"><Link to='/' onClick={() => {setLogedIn(false)}}>Log out</Link></div>\n    </header>\n  );\n}","import { Dispatch } from 'react';\nimport './category-card-add.css';\n\ninterface AddNewCategoryState{\n  isNewCategoryCreating: boolean;\n  setCreateNewCategoryMode: Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport function CategoryCardAdd({isNewCategoryCreating, setCreateNewCategoryMode}: AddNewCategoryState) {\n  const addNewCategory = () => {\n    if(!isNewCategoryCreating) setCreateNewCategoryMode(true);\n  };\n\n  return (\n    <div className=\"category-card-add\" onClick={() => {addNewCategory()}}>\n      <h2 className=\"create-new-category-h2\">Create new Category</h2>\n      <div className=\"create-new-category-plus\"></div>\n    </div>\n  );\n}","import { Dispatch, useContext, useRef } from \"react\";\nimport { UpdateData } from \"../../../context\";\nimport { createCategory } from \"../../../shared/api\";\nimport './category-card-creator.css';\n\n\nexport function CategoryCardCreator({setCreateNewCategoryMode}: {setCreateNewCategoryMode: Dispatch<React.SetStateAction<boolean>>}) {\n  const categotyInput = useRef<HTMLInputElement>(null);\n\n  const {setIsLoaded} = useContext(UpdateData);\n\n  const createNewCategory = async () => {\n    const newCategory = categotyInput.current?.value;\n    if (newCategory) {\n      await createCategory(newCategory);\n      setIsLoaded(false);\n    }\n  }\n\n  return (\n    <div className=\"category-card-creator\">\n      <div className=\"category-card-creator-form\">\n        <label htmlFor=\"new-category\" className=\"category-card-creator-form-label\">Category Name: </label>\n        <input type=\"text\" id=\"new-category\" ref={categotyInput} className=\"category-card-creator-form-input\" placeholder=\"New category\"/>\n      </div>\n      <div className=\"category-card-creator-constrols\">\n        <button className=\"category-card-creator-button red\" onClick={() => {setCreateNewCategoryMode(false)}}>Cancel</button>\n        <button className=\"category-card-creator-button\" onClick={createNewCategory}>Create</button>\n      </div>\n    </div>\n  );\n}\n","import { Dispatch, useContext, useRef } from \"react\";\nimport { deleteCategory, updateCategory } from \"../../../shared/api\";\nimport {UpdateData} from '../../../context';\nimport './category-card-editor.css';\n\ninterface CategoryState {\n  categoryName: string;\n  setCategoryCardMode: Dispatch<React.SetStateAction<boolean>>;\n  index: number;\n}\n\nexport function CategoryCardEditor({categoryName, setCategoryCardMode, index}: CategoryState) {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const {setIsLoaded} = useContext(UpdateData);\n\n  const updCategory = async () => {\n    if (inputRef.current?.value) {\n      await updateCategory(index, inputRef.current?.value);\n      setIsLoaded(false);\n      // setCategoryCardMode(false);\n    }\n  };\n\n  const delCategory = async () => {\n    await deleteCategory(index);\n    setIsLoaded(false);\n  };\n\n  return (\n    <div className=\"category-card-editor\">\n      <div className=\"category-delete\" onClick={delCategory}></div>\n      <div className=\"category-card-editor-form\">\n        <label htmlFor=\"new-category\" className=\"category-card-editor-form-label\">Category Name: </label>\n        <input type=\"text\" id=\"new-category\" ref={inputRef} className=\"category-card-editor-form-input\" placeholder={categoryName}/>\n      </div>\n      <div className=\"category-card-editor-constrols\">\n        <button className=\"category-card-editor-button red\" onClick={() => {setCategoryCardMode(false)}}>Cancel</button>\n        <button className=\"category-card-editor-button\" onClick={updCategory}>Create</button>\n      </div>\n    </div>\n  );\n}","import { Dispatch, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { UpdateData } from \"../../../context\";\nimport { deleteCategory } from \"../../../shared/api\";\nimport './category-card-view.css';\n\ninterface CategoryState {\n  setCategoryCardMode: Dispatch<React.SetStateAction<boolean>>;\n  categoryName: string;\n  wordsQty: number;\n  index: number\n}\n\nexport function CategoryCardView({\n  setCategoryCardMode,\n  categoryName,\n  wordsQty,\n  index}: CategoryState) {\n\n  const {setIsLoaded} = useContext(UpdateData);\n\n  const delCategory = async () => {\n    await deleteCategory(index);\n    setIsLoaded(false);\n  };\n\n  return (\n    <div className=\"category-card-view\">\n      <div className=\"category-delete\" onClick={delCategory}></div>\n      <h2 className=\"category-card-view-h2\">{categoryName}</h2>\n      <p className=\"category-card-view-p\">Words: <b>{wordsQty}</b></p>\n      <div className=\"category-card-view-constrols\">\n        <button className=\"category-card-view-button\" onClick={() => {setCategoryCardMode(true)}}>Update</button>\n        <Link to={\"/admin/\" + index} className=\"category-card-view-add-words\"> Add word </Link>\n      </div>\n    </div>\n  );\n}","import { useState } from \"react\";\nimport { CategoryCardEditor } from \"../category-card-editor/category-card-editor\";\nimport { CategoryCardView } from \"../category-card-view/category-card-view\";\n\nexport function CategoryCard({categoryName, wordsQty, index}: {categoryName: string; wordsQty: number, index: number}) {\n  const [categoryCardMode, setCategoryCardMode] = useState(false);\n\n  return (\n    <div>\n      {categoryCardMode? \n        <CategoryCardEditor \n          categoryName={categoryName}\n          setCategoryCardMode={setCategoryCardMode}\n          index={index}\n        />\n      : <CategoryCardView  \n          setCategoryCardMode={setCategoryCardMode}\n          categoryName={categoryName}\n          wordsQty={wordsQty}\n          index={index}\n        />\n      }\n    </div>\n  );\n}","import { useState } from 'react';\nimport { AdminHeader } from '../admin-header/admin-header';\nimport { CategoryCardAdd } from '../category-card-add/category-card-add';\nimport { CategoryCardCreator } from '../category-card-creator/category-card-creator';\nimport { CategoryCard } from '../category-card/category-card';\nimport './categories-editor-page.css';\n\ninterface Category {\n  id: number;\n  categoryName: string\n}\n\ninterface Words {\n  catId: number;\n  words: WordFrom[];\n};\n\ninterface WordFrom {\n  id: number;\n  word: string;\n  translation: string;\n  image: string;\n  audioSrc: string;\n}\n\nexport function CategoriesEditorPage({categories, words}: {categories: Category[]; words: Words[]}) {\n  const [isNewCategoryCreating, setCreateNewCategoryMode] = useState(false);\n\n  const categoriesCard = categories.map((item) => {\n    const index = words.findIndex(elem => elem.catId === item.id);\n    const len = words[index].words.length;\n    return <CategoryCard key={item.id} categoryName={item.categoryName} wordsQty={len} index={item.id}/>\n  });\n\n  return (\n    <div>\n      <AdminHeader page=\"category\"/>\n      <div className=\"container-for-categories\">\n        { categoriesCard} \n        {isNewCategoryCreating && <CategoryCardCreator setCreateNewCategoryMode={setCreateNewCategoryMode} />}\n        <CategoryCardAdd isNewCategoryCreating={isNewCategoryCreating} setCreateNewCategoryMode={setCreateNewCategoryMode}/>\n      </div>\n    </div>\n  );\n}","import { Dispatch } from 'react';\nimport './word-card-add.css';\n\ninterface AddNewWord{\n  isNewWordCreating: boolean;\n  setCreateNewWordMode: Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport function WordCardAdd({isNewWordCreating, setCreateNewWordMode}: AddNewWord) {\n  const addNewWord = () => {\n    if(!isNewWordCreating) setCreateNewWordMode(true);\n  };\n\n  return (\n    <div className=\"word-card-add\" onClick={() => {addNewWord()}}>\n      <h2 className=\"create-new-word-h2\">Create new Word</h2>\n      <div className=\"create-new-word-plus\"></div>\n    </div>\n  );\n}","import { Dispatch, useContext, useRef, useState } from \"react\";\nimport { UpdateData } from \"../../../context\";\nimport { createWordInCategory, loadFile } from \"../../../shared/api\";\nimport './word-card-creator.css';\n\n\nexport function WordCardCreator({setCreateNewWordMode, category}: {category: string; setCreateNewWordMode: Dispatch<React.SetStateAction<boolean>>}) {\n\n  const [formError, setFormError] = useState(false);\n\n  const {setIsLoaded} = useContext(UpdateData);\n\n  const audioInput = useRef<HTMLInputElement>(null);\n  const imgInput = useRef<HTMLInputElement>(null)\n  const wordData = useRef<HTMLInputElement>(null);\n  const translateData = useRef<HTMLInputElement>(null);\n\n  const sendData = async () => {\n\n    const files1 = audioInput.current?.files as FileList;\n\n    const files2 = imgInput.current?.files as FileList;\n\n    const wordString = wordData.current?.value;\n\n    const translateString = translateData.current?.value\n\n    if (files1 && files2 && wordString && translateString) {\n    const formData = new FormData();\n\n    const audio = files1[0];\n    const audioExtIndex = files1[0].name.lastIndexOf('.');\n    const audioExt = files1[0].name.slice(audioExtIndex);\n    formData.append('audio', audio, wordString + audioExt);\n\n    const image = files2[0];\n    const imageExtIndex = files2[0].name.lastIndexOf('.');\n    const imageExt = files2[0].name.slice(imageExtIndex);\n    formData.append('image', image, wordString + imageExt);\n\n    await loadFile(formData);\n    await createWordInCategory (\n      wordString, \n      translateString, \n      'img/' + wordString + imageExt, \n      'audio/' + wordString + audioExt,\n       +category);\n    \n    setIsLoaded(false);\n\n    } else {\n      setFormError(true);\n    }\n  }\n\n  return (\n    <div className=\"word-card-editor\">\n      <div className=\"word-delete\"></div>\n      <div className=\"word-card-editor-form\">\n        <label htmlFor=\"new-word\" className=\"word-card-editor-form-label\">Word:  </label>\n        <input type=\"text\" id=\"new-word\" ref={wordData} className=\"word-card-editor-form-input\" placeholder=\"New word\"/>\n      </div>\n      <div className=\"word-card-editor-form\">\n        <label htmlFor=\"new-translation\" className=\"word-card-editor-form-label\">Translation: </label>\n        <input type=\"text\" id=\"new-translation\" ref={translateData} className=\"word-card-editor-form-input\" placeholder=\"New translation\"/>\n      </div>\n      <div className=\"word-card-editor-upload\">\n        <label htmlFor=\"new-sound\" className=\"word-card-editor-upload-label\">Sound: </label>\n        <input type=\"file\" id=\"new-sound\" ref={audioInput} className=\"word-card-editor-upload-input\"/>\n      </div>\n      <div className=\"word-card-editor-upload\">\n        <label htmlFor=\"new-img\" className=\"word-card-editor-upload-label\">Image: </label>\n        <input type=\"file\" id=\"new-img\" ref={imgInput} className=\"word-card-editor-upload-input\"/>\n      </div>\n      {formError && <div>Please fullfill all data for words</div>}\n      <div className=\"word-card-editor-constrols\">\n        <button className=\"word-card-editor-button red\" onClick={() => {setCreateNewWordMode(false)}}>Cancel</button>\n        <button className=\"word-card-editor-button\" onClick={sendData}>Create</button>\n      </div>\n    </div>\n  );\n}","import { Dispatch, useContext, useRef, useState } from \"react\";\nimport { UpdateData } from \"../../../context\";\nimport { deleteWordInCategory, loadFile, updateWordInCategory } from \"../../../shared/api\";\nimport './word-card-editor.css';\n\ninterface WordCard {\n  word: WordFrom;\n  setWordCardMode: Dispatch<React.SetStateAction<boolean>>;\n  category: string\n}\n\ninterface WordFrom {\n  id: number;\n  word: string;\n  translation: string;\n  image: string;\n  audioSrc: string;\n}\n\n\nexport function WordCardEditor({word, setWordCardMode, category}: WordCard) {\n\n  const [formError, setFormError] = useState(false);\n\n  const {setIsLoaded} = useContext(UpdateData);\n\n  const audioInput = useRef<HTMLInputElement>(null);\n  const imgInput = useRef<HTMLInputElement>(null)\n  const wordData = useRef<HTMLInputElement>(null);\n  const translateData = useRef<HTMLInputElement>(null);\n\n  const sendData = async () => {\n\n    const files1 = audioInput.current?.files as FileList;\n\n    const files2 = imgInput.current?.files as FileList;\n\n    const wordString = wordData.current?.value;\n\n    const translateString = translateData.current?.value\n\n    if (files1 && files2 && wordString && translateString) {\n    const formData = new FormData();\n\n    const audio = files1[0];\n    const audioExtIndex = files1[0].name.lastIndexOf('.');\n    const audioExt = files1[0].name.slice(audioExtIndex);\n    formData.append('audio', audio, wordString + audioExt);\n\n    const image = files2[0];\n    const imageExtIndex = files2[0].name.lastIndexOf('.');\n    const imageExt = files2[0].name.slice(imageExtIndex);\n    formData.append('image', image, wordString + imageExt);\n\n    await loadFile(formData);\n    await updateWordInCategory(\n      wordString, \n      translateString, \n      'img/' + wordString + imageExt, \n      'audio/' + wordString + audioExt,\n      word.id,\n      +category);\n    \n    setIsLoaded(false);\n\n    } else {\n      setFormError(true);\n    }\n  }\n\n  \n  const deleteWord = async () => {\n    await deleteWordInCategory(word.id, +category);\n    setIsLoaded(false);\n  }\n\n  return (\n    <div className=\"word-card-editor\">\n      <div className=\"word-delete\" onClick={deleteWord}></div>\n      <div className=\"word-card-editor-form\">\n        <label htmlFor=\"new-word\" className=\"word-card-editor-form-label\">Word:  </label>\n        <input type=\"text\" id=\"new-word\" ref={wordData} className=\"word-card-editor-form-input\" placeholder={word.word}/>\n      </div>\n      <div className=\"word-card-editor-form\">\n        <label htmlFor=\"new-translation\" className=\"word-card-editor-form-label\">Translation: </label>\n        <input type=\"text\" id=\"new-translation\" ref={translateData} className=\"word-card-editor-form-input\" placeholder={word.translation}/>\n      </div>\n      <div className=\"word-card-editor-upload\">\n        <label htmlFor=\"new-sound\" className=\"word-card-editor-upload-label\">Sound: </label>\n        <input type=\"file\" id=\"new-sound\" ref={audioInput} className=\"word-card-editor-upload-input\"/>\n      </div>\n      <div className=\"word-card-editor-upload\">\n        <label htmlFor=\"new-img\" className=\"word-card-editor-upload-label\">Image: </label>\n        <input type=\"file\" id=\"new-img\" ref={imgInput} className=\"word-card-editor-upload-input\"/>\n      </div>\n      {formError && <div>Please fullfill all data for words</div>}\n      <div className=\"word-card-editor-constrols\">\n        <button className=\"word-card-editor-button red\" onClick={() => {setWordCardMode(false)}}>Cancel</button>\n        <button className=\"word-card-editor-button\" onClick={sendData}>Create</button>\n      </div>\n    </div>\n  );\n}","import { Dispatch, useContext } from \"react\";\nimport './word-card-view.css';\nimport {config} from '../../../config';\nimport { deleteWordInCategory } from \"../../../shared/api\";\nimport { UpdateData } from \"../../../context\";\nimport { playAudio } from \"../../../shared/play-audio\";\n\ninterface WordState {\n  setWordCardMode: Dispatch<React.SetStateAction<boolean>>;\n  word: WordFrom;\n  category: string;\n}\n\ninterface WordFrom {\n  id: number;\n  word: string;\n  translation: string;\n  image: string;\n  audioSrc: string;\n}\n\nexport function WordCardView({setWordCardMode, word, category}: WordState) {\n\n  const {setIsLoaded} = useContext(UpdateData);\n\n  const deleteWord = async () => {\n    await deleteWordInCategory(word.id, +category);\n    setIsLoaded(false);\n  }\n\n  const playSoundFile = () => {\n    playAudio(config.host + config.mediaFolder + '/' + word.audioSrc);\n  };\n\n  return (\n    <div className=\"word-card-view\">\n      <div className=\"word-delete\" onClick={deleteWord}></div>\n      <h2 className=\"word-card-view-h2\"><b>Word: </b>{word.word}</h2>\n      <h2 className=\"word-card-view-h2\"><b>Translation: </b>{word.translation}</h2>\n      <h2 className=\"word-card-view-h2\">Sound file: <button onClick={playSoundFile}>Play {word.audioSrc.split('/')[1]}</button></h2>\n      <h2 className=\"word-card-view-h2\"><b>Image</b></h2>\n      <img className=\"word-card-view-img\" src={config.host + config.mediaFolder + \"/\" + word.image} alt={word.word} />\n      <button className=\"word-card-view-button\" onClick={() => {setWordCardMode(true)}}>Change</button>\n    </div>\n  );\n}","import { useState } from \"react\";\nimport { WordCardEditor } from \"../word-card-editor/word-card-editor\";\nimport { WordCardView } from \"../word-card-view/word-card-view\";\n\ninterface WordFrom {\n  id: number;\n  word: string;\n  translation: string;\n  image: string;\n  audioSrc: string;\n}\n\nexport function WordCard({word, category}: {word: WordFrom; category: string}) {\n  const [wordCardMode, setWordCardMode] = useState(false);\n\n  return (\n    <div>\n      {wordCardMode? \n        <WordCardEditor \n          setWordCardMode={setWordCardMode}\n          word={word}\n          category={category}\n        />\n      : <WordCardView  \n          setWordCardMode={setWordCardMode}\n          word={word}\n          category={category}\n        />\n      }\n    </div>\n  );\n}","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AdminHeader } from \"../admin-header/admin-header\";\nimport { WordCardAdd } from \"../word-card-add/word-card-add\";\nimport { WordCardCreator } from \"../word-card-creator/word-card-creator\";\nimport { WordCard } from \"../word-card/word-card\";\nimport './words-editor-pages.css';\n\ninterface WordFrom {\n  id: number;\n  word: string;\n  translation: string;\n  image: string;\n  audioSrc: string;\n}\n\nexport function WordsEditorPage({category, wordsInCategory}: {category: string, wordsInCategory: WordFrom[]}) {\n  const [isNewWordCreating, setCreateNewWordMode] = useState(false);\n\n    const WordsCard = wordsInCategory.map((item, i) => {\n    return <WordCard key={item.id} word={item} category={category}/>\n  });\n\n  return (\n    <div className=\"word-editor-page\">\n      <AdminHeader page=\"word\"/>\n      <Link to='/admin/' className='back-to-categories'> Back to Categories</Link>\n      <div className=\"container-for-words-and-categories\">\n        { WordsCard } \n        {isNewWordCreating && <WordCardCreator category={category} setCreateNewWordMode={setCreateNewWordMode} />}\n        <WordCardAdd isNewWordCreating={isNewWordCreating} setCreateNewWordMode={setCreateNewWordMode}/>\n      </div>\n    </div>\n  );\n}","import { useEffect, useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { getCategories, getWordsByCategory } from \"../../../shared/api\";\nimport { CategoriesEditorPage } from \"../categories-editor-page/categories-editor-page\";\nimport { WordsEditorPage } from \"../words-editor-page/words-editor-page\";\nimport {UpdateData} from '../../../context';\nimport './admin-panel.css';\n\ninterface Words {\n  catId: number;\n  words: WordFrom[];\n};\n\ninterface WordFrom {\n  id: number;\n  word: string;\n  translation: string;\n  image: string;\n  audioSrc: string;\n}\n\nexport function AdminPanel() {\n  const [cat, setCat] = useState([] as {id: number; categoryName: string}[]);\n  const [words, setWords] = useState<Words[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  \n  useEffect(() => {\n    (async function() {\n      const catData = await getCategories();\n      setCat(catData);\n    }) ();\n  }, [isLoaded]);\n\n  useEffect(() => {\n    async function wordsUpd() {\n      const arrPromis = [];\n      for (let i = 0; i < cat.length; i++) {\n        arrPromis.push(getWordsByCategory(cat[i].id));\n      }\n      const wordsData = await Promise.all(arrPromis);\n      setWords(wordsData);\n      setIsLoaded(true);\n    };\n    if (cat.length > 0 && !isLoaded) {\n      wordsUpd();\n    }\n  }, [cat]);\n\n  const CategoryEditorRender = () => {\n    return isLoaded? <CategoriesEditorPage categories={cat} words={words}/>: <div>Loading</div>\n  }\n\n  const wordsEditorRender = (category: string) => {\n    const cat = +category;\n    if (!isLoaded) {\n      return (<div>Loading</div>);\n    }\n    const index = words.findIndex(elem => elem.catId === cat);\n    const wordsInCategory = words[index].words;\n    return (<WordsEditorPage category={category} wordsInCategory={wordsInCategory}/>)\n  }\n\n  const redirect = () => {\n    return (\n      <div>\n        {isLoaded && <Redirect to=\"/admin/\" />}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <UpdateData.Provider value={{isLoaded, setIsLoaded}}>\n        {/* <AdminHeader /> */}\n        <Switch>\n          <Route exact path=\"/\" render={redirect} />\n          <Route path=\"/game\" render={redirect} />\n          <Route path=\"/statistic\" render={redirect} />\n          <Route exact path=\"/admin/\" render={() => <CategoryEditorRender/>} />\n          <Route path=\"/admin/:category\" render={({match})=> wordsEditorRender(match.params.category)}  />\n        </Switch>\n      </UpdateData.Provider>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {LogedInContext} from './context';\nimport { AdminPanel } from './components/admin/admin-panel/admin-panel';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport {config} from './config';\n\nfunction Main() {\n  const [isLogedIn, setLogedIn] = useState(false);\n\n  return (\n    <React.StrictMode>\n      <LogedInContext.Provider value={{isLogedIn, setLogedIn}}>\n        {\n          config.hachRouter?\n          <HashRouter>\n          {isLogedIn? <AdminPanel /> : <App />}\n          </HashRouter>\n          :\n          <BrowserRouter>\n            {isLogedIn? <AdminPanel /> : <App />}\n          </BrowserRouter>\n        }\n      </LogedInContext.Provider>\n    </React.StrictMode>\n  );\n}\n\nReactDOM.render(\n  <Main />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}