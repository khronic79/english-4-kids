{"version":3,"sources":["context.tsx","components/mode-controll/mode-controll.tsx","components/black-layer/black-layer.tsx","components/burger/burger.tsx","cards.tsx","components/menu-link/menu-link.tsx","components/menu/menu.tsx","components/navigation/navigation.tsx","components/header/header.tsx","components/category-card/category-card.tsx","shared/play-audio.tsx","components/card/card.tsx","components/start-repeat-button/start-repeat-button.tsx","components/stars/stars.tsx","components/main-play-field/main-play-field.tsx","shared/mix-array.tsx","components/success-page/success-page.tsx","components/statistic/statistic.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppModeContext","React","createContext","appMode","setAppMode","ModeControll","useContext","useState","mode","setMode","className","onClick","type","BlackLayer","Burger","cb","cards","word","translation","image","audioSrc","MenuLink","category","to","Menu","links","map","item","i","Navigation","cName","changeClass","Header","CategoryCard","cardsArr","slice","categories","src","alt","playAudio","audio","Audio","preload","audioPromise","play","undefined","then","_","catch","err","console","info","Card","card","isGameStarted","cardsDataMix","currentWord","setcurrentWord","index","setIndex","isFlipped","setIsFlipped","clickedStyle","setClickStyle","cardStyle","useEffect","addDataToLocalStorage","param","localStorage","getItem","data","JSON","parse","setItem","stringify","replace","push","newArr","clickHandler","onMouseLeave","StartRepeatButton","startGame","Stars","stars","length","toString","MainPlayField","setIsGameStarted","mixedWords","mixWords","gameResult","setGameResult","a","setTimeout","check","every","elem","cardsData","arr","array","j","Math","floor","random","t","mixArray","cardsComponentArr","SuccessPage","result","isForward","setisForward","Statistic","words","train","success","error","percent","line","items","config","sortConfig","setSortConfig","useMemo","sortableItems","sort","b","key","direction","requestSort","useSortableData","getClassNamesFor","name","App","exact","path","component","render","match","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Main","StrictMode","Provider","value","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.96848db7.chunk.js","sourcesContent":["import React from \"react\";\n\nconst AppModeContext = React.createContext({appMode: false, setAppMode: (appMode: boolean) => {}});\n\nexport default AppModeContext;","import React, { useContext, useState } from 'react';\nimport AppModeContext from '../../context';\nimport './mode-controll.css';\n\nfunction ModeControll() {\n  const { appMode, setAppMode } = useContext(AppModeContext);\n  const [mode, setMode] = useState(\"game-mode\");\n  const changeMode = () => {\n    if (!appMode) {\n      setAppMode(true);\n      setMode(\"game-mode play\");\n    } else {\n      setAppMode(false);\n      setMode(\"game-mode\");\n    }\n  };\n  return (\n    <div className={mode} onClick={changeMode}>\n      <div className=\"play-mode-title\">Play</div>\n      <div className=\"train-mode-title\">Train</div>\n      <input className=\"checkbox\" type=\"checkbox\"/>\n      <div className=\"mode-controller\"></div>\n    </div>\n  );\n}\n\nexport default ModeControll;","import React from 'react';\nimport './black-layer.css';\n\nfunction BlackLayer() {\n  return (\n    <div className=\"black-layer\"></div>\n  );\n}\n\nexport default BlackLayer;","import React, { FunctionComponent } from 'react';\nimport './burger.css';\n\ninterface NewBurgerProps {\n  cb: () => void;\n}\n\nexport const Burger: FunctionComponent<NewBurgerProps> = ({ cb }): JSX.Element => {\n  return (\n    <div className=\"menu-button\" onClick = {cb}>\n    <div className=\"cross1\"></div>\n    <div className=\"cross2\"></div>\n    <div className=\"cross3\"></div>\n    <div className=\"cross4\"></div>\n  </div>\n  );\n};\n","const cards = [ \r\n    ['Action (set A)', 'Action (set B)', 'Animal (set A)', 'Animal (set B)', 'Clothes', 'Emotions', 'Fruits', 'Birds'],\r\n    [\r\n      {\r\n        word: 'cry',\r\n        translation: 'плакать',\r\n        image: 'img/cry.jpg',\r\n        audioSrc: 'audio/cry.mp3'\r\n      },\r\n      {\r\n        word: 'dance',\r\n        translation: 'танцевать',\r\n        image: 'img/dance.jpg',\r\n        audioSrc: 'audio/dance.mp3'\r\n      },\r\n      {\r\n        word: 'dive',\r\n        translation: 'нырять',\r\n        image: 'img/dive.jpg',\r\n        audioSrc: 'audio/dive.mp3'\r\n      },\r\n      {\r\n        word: 'draw',\r\n        translation: 'рисовать',\r\n        image: 'img/draw.jpg',\r\n        audioSrc: 'audio/draw.mp3'\r\n      },\r\n      {\r\n        word: 'fish',\r\n        translation: 'ловить рыбу',\r\n        image: 'img/fish.jpg',\r\n        audioSrc: 'audio/fish.mp3'\r\n      },\r\n      {\r\n        word: 'fly',\r\n        translation: 'летать',\r\n        image: 'img/fly.jpg',\r\n        audioSrc: 'audio/fly.mp3'\r\n      },\r\n      {\r\n        word: 'hug',\r\n        translation: 'обнимать',\r\n        image: 'img/hug.jpg',\r\n        audioSrc: 'audio/hug.mp3'\r\n      },\r\n      {\r\n        word: 'jump',\r\n        translation: 'прыгать',\r\n        image: 'img/jump.jpg',\r\n        audioSrc: 'audio/jump.mp3'\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        word: 'open',\r\n        translation: 'открывать',\r\n        image: 'img/open.jpg',\r\n        audioSrc: 'audio/open.mp3'\r\n      },\r\n      {\r\n        word: 'play',\r\n        translation: 'играть',\r\n        image: 'img/play.jpg',\r\n        audioSrc: 'audio/play.mp3'\r\n      },\r\n      {\r\n        word: 'point',\r\n        translation: 'указывать',\r\n        image: 'img/point.jpg',\r\n        audioSrc: 'audio/point.mp3'\r\n      },\r\n      {\r\n        word: 'ride',\r\n        translation: 'ездить',\r\n        image: 'img/ride.jpg',\r\n        audioSrc: 'audio/ride.mp3'\r\n      },\r\n      {\r\n        word: 'run',\r\n        translation: 'бегать',\r\n        image: 'img/run.jpg',\r\n        audioSrc: 'audio/run.mp3'\r\n      },\r\n      {\r\n        word: 'sing',\r\n        translation: 'петь',\r\n        image: 'img/sing.jpg',\r\n        audioSrc: 'audio/sing.mp3'\r\n      },\r\n      {\r\n        word: 'skip',\r\n        translation: 'пропускать, прыгать',\r\n        image: 'img/skip.jpg',\r\n        audioSrc: 'audio/skip.mp3'\r\n      },\r\n      {\r\n        word: 'swim',\r\n        translation: 'плавать',\r\n        image: 'img/swim.jpg',\r\n        audioSrc: 'audio/swim.mp3'\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        word: 'cat',\r\n        translation: 'кот',\r\n        image: 'img/cat.jpg',\r\n        audioSrc: 'audio/cat.mp3'\r\n      },\r\n      {\r\n        word: 'chick',\r\n        translation: 'цыплёнок',\r\n        image: 'img/chick.jpg',\r\n        audioSrc: 'audio/chick.mp3'\r\n      },\r\n      {\r\n        word: 'chicken',\r\n        translation: 'курица',\r\n        image: 'img/chicken.jpg',\r\n        audioSrc: 'audio/chicken.mp3'\r\n      },\r\n      {\r\n        word: 'dog',\r\n        translation: 'собака',\r\n        image: 'img/dog.jpg',\r\n        audioSrc: 'audio/dog.mp3'\r\n      },\r\n      {\r\n        word: 'horse',\r\n        translation: 'лошадь',\r\n        image: 'img/horse.jpg',\r\n        audioSrc: 'audio/horse.mp3'\r\n      },\r\n      {\r\n        word: 'pig',\r\n        translation: 'свинья',\r\n        image: 'img/pig.jpg',\r\n        audioSrc: 'audio/pig.mp3'\r\n      },\r\n      {\r\n        word: 'rabbit',\r\n        translation: 'кролик',\r\n        image: 'img/rabbit.jpg',\r\n        audioSrc: 'audio/rabbit.mp3'\r\n      },\r\n      {\r\n        word: 'sheep',\r\n        translation: 'овца',\r\n        image: 'img/sheep.jpg',\r\n        audioSrc: 'audio/sheep.mp3'\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        word: 'bird',\r\n        translation: 'птица',\r\n        image: 'img/bird.jpg',\r\n        audioSrc: 'audio/bird.mp3'\r\n      },\r\n      {\r\n        word: 'fish',\r\n        translation: 'рыба',\r\n        image: 'img/fish1.jpg',\r\n        audioSrc: 'audio/fish.mp3'\r\n      },\r\n      {\r\n        word: 'frog',\r\n        translation: 'жаба',\r\n        image: 'img/frog.jpg',\r\n        audioSrc: 'audio/frog.mp3'\r\n      },\r\n      {\r\n        word: 'giraffe',\r\n        translation: 'жирафа',\r\n        image: 'img/giraffe.jpg',\r\n        audioSrc: 'audio/giraffe.mp3'\r\n      },\r\n      {\r\n        word: 'lion',\r\n        translation: 'лев',\r\n        image: 'img/lion.jpg',\r\n        audioSrc: 'audio/lion.mp3'\r\n      },\r\n      {\r\n        word: 'mouse',\r\n        translation: 'мышь',\r\n        image: 'img/mouse.jpg',\r\n        audioSrc: 'audio/mouse.mp3'\r\n      },\r\n      {\r\n        word: 'turtle',\r\n        translation: 'черепаха',\r\n        image: 'img/turtle.jpg',\r\n        audioSrc: 'audio/turtle.mp3'\r\n      },\r\n      {\r\n        word: 'dolphin',\r\n        translation: 'дельфин',\r\n        image: 'img/dolphin.jpg',\r\n        audioSrc: 'audio/dolphin.mp3'\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        word: 'skirt',\r\n        translation: 'юбка',\r\n        image: 'img/skirt.jpg',\r\n        audioSrc: 'audio/skirt.mp3'\r\n      },\r\n      {\r\n        word: 'pants',\r\n        translation: 'брюки',\r\n        image: 'img/pants.jpg',\r\n        audioSrc: 'audio/pants.mp3'\r\n      },\r\n      {\r\n        word: 'blouse',\r\n        translation: 'блузка',\r\n        image: 'img/blouse.jpg',\r\n        audioSrc: 'audio/blouse.mp3'\r\n      },\r\n      {\r\n        word: 'dress',\r\n        translation: 'платье',\r\n        image: 'img/dress.jpg',\r\n        audioSrc: 'audio/dress.mp3'\r\n      },\r\n      {\r\n        word: 'boot',\r\n        translation: 'ботинок',\r\n        image: 'img/boot.jpg',\r\n        audioSrc: 'audio/boot.mp3'\r\n      },\r\n      {\r\n        word: 'shirt',\r\n        translation: 'рубашка',\r\n        image: 'img/shirt.jpg',\r\n        audioSrc: 'audio/shirt.mp3'\r\n      },\r\n      {\r\n        word: 'coat',\r\n        translation: 'пальто',\r\n        image: 'img/coat.jpg',\r\n        audioSrc: 'audio/coat.mp3'\r\n      },\r\n      {\r\n        word: 'shoe',\r\n        translation: 'туфли',\r\n        image: 'img/shoe.jpg',\r\n        audioSrc: 'audio/shoe.mp3'\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        word: 'sad',\r\n        translation: 'грустный',\r\n        image: 'img/sad.jpg',\r\n        audioSrc: 'audio/sad.mp3'\r\n      },\r\n      {\r\n        word: 'angry',\r\n        translation: 'сердитый',\r\n        image: 'img/angry.jpg',\r\n        audioSrc: 'audio/angry.mp3'\r\n      },\r\n      {\r\n        word: 'happy',\r\n        translation: 'счастливый',\r\n        image: 'img/happy.jpg',\r\n        audioSrc: 'audio/happy.mp3'\r\n      },\r\n      {\r\n        word: 'tired',\r\n        translation: 'уставший',\r\n        image: 'img/tired.jpg',\r\n        audioSrc: 'audio/tired.mp3'\r\n      },\r\n      {\r\n        word: 'surprised',\r\n        translation: 'удивлённый',\r\n        image: 'img/surprised.jpg',\r\n        audioSrc: 'audio/surprised.mp3'\r\n      },\r\n      {\r\n        word: 'scared',\r\n        translation: 'испуганный',\r\n        image: 'img/scared.jpg',\r\n        audioSrc: 'audio/scared.mp3'\r\n      },\r\n      {\r\n        word: 'smile',\r\n        translation: 'улыбка',\r\n        image: 'img/smile.jpg',\r\n        audioSrc: 'audio/smile.mp3'\r\n      },\r\n      {\r\n        word: 'laugh',\r\n        translation: 'смех',\r\n        image: 'img/laugh.jpg',\r\n        audioSrc: 'audio/laugh.mp3'\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        word: 'apple',\r\n        translation: 'яблоко',\r\n        image: 'img/apple.jpg',\r\n        audioSrc: 'audio/apple.mp3'\r\n      },\r\n      {\r\n        word: 'banana',\r\n        translation: 'банан',\r\n        image: 'img/banana.jpg',\r\n        audioSrc: 'audio/banana.mp3'\r\n      },\r\n      {\r\n        word: 'kiwi',\r\n        translation: 'киви',\r\n        image: 'img/kiwi.jpg',\r\n        audioSrc: 'audio/kiwi.mp3'\r\n      },\r\n      {\r\n        word: 'lemon',\r\n        translation: 'лемон',\r\n        image: 'img/lemon.jpg',\r\n        audioSrc: 'audio/lemon.mp3'\r\n      },\r\n      {\r\n        word: 'mango',\r\n        translation: 'манго',\r\n        image: 'img/mango.jpg',\r\n        audioSrc: 'audio/mango.mp3'\r\n      },\r\n      {\r\n        word: 'orange',\r\n        translation: 'апельсин',\r\n        image: 'img/orange.jpg',\r\n        audioSrc: 'audio/orange.mp3'\r\n      },\r\n      {\r\n        word: 'pear',\r\n        translation: 'груша',\r\n        image: 'img/pear.jpg',\r\n        audioSrc: 'audio/pear.mp3'\r\n      },\r\n      {\r\n        word: 'pineapple',\r\n        translation: 'ананас',\r\n        image: 'img/pineapple.jpg',\r\n        audioSrc: 'audio/pineapple.mp3'\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        word: 'chicken',\r\n        translation: 'курица',\r\n        image: 'img/chicken.jpg',\r\n        audioSrc: 'audio/chicken.mp3'\r\n      },\r\n      {\r\n        word: 'crow',\r\n        translation: 'ворон',\r\n        image: 'img/crow.jpg',\r\n        audioSrc: 'audio/crow.mp3'\r\n      },\r\n      {\r\n        word: 'eagle',\r\n        translation: 'орел',\r\n        image: 'img/eagle.jpg',\r\n        audioSrc: 'audio/eagle.mp3'\r\n      },\r\n      {\r\n        word: 'ostrich',\r\n        translation: 'страус',\r\n        image: 'img/ostrich.jpg',\r\n        audioSrc: 'audio/ostrich.mp3'\r\n      },\r\n      {\r\n        word: 'parrot',\r\n        translation: 'попугай',\r\n        image: 'img/parrot.jpg',\r\n        audioSrc: 'audio/parrot.mp3'\r\n      },\r\n      {\r\n        word: 'seagull',\r\n        translation: 'чайка',\r\n        image: 'img/seagull.jpg',\r\n        audioSrc: 'audio/seagull.mp3'\r\n      },\r\n      {\r\n        word: 'sparrow',\r\n        translation: 'воробей',\r\n        image: 'img/sparrow.jpg',\r\n        audioSrc: 'audio/sparrow.mp3'\r\n      },\r\n      {\r\n        word: 'woodpecker',\r\n        translation: 'дятел',\r\n        image: 'img/woodpecker.jpg',\r\n        audioSrc: 'audio/woodpecker.mp3'\r\n      }\r\n    ]\r\n  ]\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  export default cards;","import { NavLink } from \"react-router-dom\";\nimport cards from '../../cards';\n\nexport function MenuLink({category}: any) {\n  \n  return (\n    <li className=\"nav-item\"><NavLink to={'/english-4-kids/game/'+category}>{cards[0][category]}</NavLink></li>  \n  );\n}","import React from 'react';\nimport './menu.css';\nimport { NavLink } from 'react-router-dom';\nimport cards from '../../cards';\nimport { MenuLink } from '../menu-link/menu-link';\n\nfunction Menu() {\n  const links = cards[0].map((item, i) => {\n    return <MenuLink key={i} category = {i}/>;\n  });\n\n  return (\n    <ul className=\"nav\">\n      <li className=\"nav-item\"><NavLink to=\"/english-4-kids/\">Main page</NavLink></li>\n      {links}\n      <li className=\"nav-item stat\"><NavLink to=\"/english-4-kids/statistic\">Statistic</NavLink></li>\n    </ul>\n  );\n}\n\nexport default Menu;","import React, { useState } from 'react';\nimport BlackLayer from '../black-layer/black-layer';\nimport { Burger } from '../burger/burger';\nimport Menu from '../menu/menu';\nimport './navigation.css';\n\nfunction Navigation() {\n  const [cName, changeClass] = useState(\"menu\");\n  const openCloseNavigation = (): void => {\n    if (cName === \"menu\") {\n      changeClass(\"menu open\");\n    } else {\n      changeClass(\"menu\");\n    }\n  }\n\n  return (\n    <nav className={cName}>\n      <Burger cb={openCloseNavigation} />\n      <BlackLayer />\n      <Menu />\n    </nav>\n  );\n}\n\nexport default Navigation;","import React from 'react';\nimport ModeControll from '../mode-controll/mode-controll';\nimport Navigation from '../navigation/navigation';\nimport './header.css';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <Navigation />\n      <ModeControll />\n    </header>\n  );\n}\n\nexport default Header;","import { NavLink } from \"react-router-dom\";\nimport cards from '../../cards';\nimport './category-card.css'\n\nexport function CategoryCard() {\n  const cardsArr = (cards.slice(1)) as unknown as {\n    word: string;\n    translation: string;\n    image: string;\n    audioSrc: string;\n}[][];\n  const categoriesArr = cards[0] as string[];\n  const categories = categoriesArr.map((category, i) => {\n    return (\n      <NavLink key={i} to={'/english-4-kids/game/'+i} className=\"category-link\">\n        <div className=\"category\">\n          <div className=\"categoty-img-wrapper\">\n            <img src={\"/english-4-kids/\" + cardsArr[i][0].image} alt={category} />\n            <div className=\"category-name\"><span>{category}</span></div>\n          </div>\n        </div>\n      </NavLink>\n    );\n  });\n\n  return (\n    <main className=\"main-section\">\n      <div className=\"cards-container\">\n        {categories}\n      </div>\n    </main>\n  );\n}","export function playAudio(audioSrc: string) {\n    let audio = new Audio();\n    audio.preload = 'auto';\n    audio.src = audioSrc;\n    const audioPromise = audio.play()\n    if (audioPromise !== undefined) {\n      audioPromise\n        .then(_ => {\n          // autoplay started\n        })\n        .catch(err => {\n          // catch dom exception\n          console.info(err)\n        })\n    }\n  }","import { Dispatch, useContext, useEffect, useState } from 'react';\nimport AppModeContext from '../../context';\nimport { CardData } from '../../interfaces';\nimport { playAudio } from '../../shared/play-audio';\nimport './card.css';\n\ninterface CardProps {\n  card: CardData\n  isGameStarted: number;\n  cardsDataMix: CardData[];\n  currentWord: boolean[];\n  setcurrentWord: Dispatch<React.SetStateAction<boolean[]>>;\n  index: number;\n  setIndex: Dispatch<React.SetStateAction<number>>;\n  category: string;\n}\n\ninterface LoccalStorageData {\n  [word: string]: {\n    [train: string]: number;\n  }\n}\n\nexport function Card({card, isGameStarted, cardsDataMix, currentWord, setcurrentWord, index, setIndex, category}: CardProps) {\n\n  const { appMode } = useContext(AppModeContext);\n\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  const [clickedStyle, setClickStyle] = useState('not-clicked');\n\n  let cardStyle = \"card-container\";\n\n  useEffect(() => {\n    setClickStyle('not-clicked');\n  }, [appMode, category]);\n\n  const setStyles = () => {\n    if (isFlipped) {\n      cardStyle = cardStyle + ' flipped';\n    } else {\n      cardStyle = cardStyle.replace(' flipped', '');\n    }\n    if (appMode) {\n      cardStyle = cardStyle + ' play';\n    } else {\n      cardStyle = cardStyle.replace(' play', '');\n    }\n    return cardStyle;\n  };\n\n  const clickHandler = () => {\n    if (clickedStyle === 'not-clicked visible') return;\n    if (isGameStarted === 1) {\n      if (cardsDataMix[index].word === card.word) {\n        setIndex(index + 1);\n        currentWord.push(true);\n        addDataToLocalStorage(category, card.word, 'success');\n        let newArr = currentWord.slice(0);\n        setcurrentWord(newArr);\n        setClickStyle('not-clicked visible');\n      } else {\n        currentWord.push(false);\n        addDataToLocalStorage(category, cardsDataMix[index].word, 'error');\n        let newArr = currentWord.slice(0);\n        setcurrentWord(newArr);\n      }\n    } else if (isGameStarted === 0) {\n      if(!appMode) {\n        addDataToLocalStorage(category, card.word, 'train');\n        playAudio('/english-4-kids/' + card.audioSrc);\n      }\n    }\n  }\n\n  const addDataToLocalStorage = (category: string, word: string, param: string) => {\n    if (localStorage.getItem(category)) { \n      let data = (JSON.parse(localStorage.getItem(category) as string)) as LoccalStorageData;\n      if (data[word]){\n        data[word][param] += 1;\n        localStorage.setItem(category, JSON.stringify(data));\n      } else {\n        data[word] = {\n          'train': 0,\n          'error': 0,\n          'success': 0\n        }\n        data[word][param] += 1;\n        localStorage.setItem(category, JSON.stringify(data));\n      }\n    } else {\n      let data: LoccalStorageData = {\n        [word]: {\n          \"train\": 0,\n          \"error\": 0,\n          \"success\": 0,\n        }\n      };\n      data[word][param] += 1;\n      localStorage.setItem(category, JSON.stringify(data));\n    }\n  }\n  \n  return (\n    <div className={setStyles()} onClick={() => clickHandler()}  onMouseLeave={() => setIsFlipped(false)}>\n      <div className=\"card\" >  \n        <div className=\"card-front\">\n          <div className=\"card-img-wrapper\">\n            <div className={clickedStyle}></div>\n            <img src={\"/english-4-kids/\" + card.image} alt=\"Action-set-a\" />\n            <div className=\"card-name\"><span>{card.word}</span></div>\n            <div className=\"rotate-controller\" onClick={() => setIsFlipped(true)}></div>\n          </div>\n        </div>\n        <div className=\"card-back\">\n          <div className=\"card-img-wrapper\">\n            <img src={\"/english-4-kids/\" + card.image} alt=\"Action-set-a\" />\n            <div className=\"card-name\"><span>{card.translation}</span></div>\n          </div>\n        </div>\n      </div>\n  </div>\n  );\n}","import { Dispatch, SetStateAction } from 'react';\nimport { CardData } from '../../interfaces';\nimport { playAudio } from '../../shared/play-audio';\nimport './start-repeat-button.css';\n\ninterface  StartGameFunction{\n  appMode: boolean\n  isGameStarted: number;\n  startGame: Dispatch<SetStateAction<number>>;\n  currentWord: boolean[];\n  cardsDataMix: CardData[];\n  index: number;\n}\n\nexport const StartRepeatButton = ({appMode, isGameStarted, startGame, currentWord, cardsDataMix, index}: StartGameFunction): JSX.Element => {\n\n  const startHandler = () => {\n    if (isGameStarted === 0) {\n      startGame(1);\n      playAudio('/english-4-kids/' + cardsDataMix[0].audioSrc);\n    } else if(isGameStarted === 1) {\n      playAudio('/english-4-kids/' + cardsDataMix[index].audioSrc);\n    }\n  };\n\n  const changeButtonName = () => {\n    if (isGameStarted === 0) return 'start-repeat-button';\n    if (isGameStarted === 1) return 'start-repeat-button game';\n  };\n\n  const thisButtonVisibility = () => {\n    if (!appMode) {\n      return 'button-visibility';\n    }\n    return '';\n  }\n\n  return (\n    <div className={thisButtonVisibility()}>\n      <div className={changeButtonName()} onClick={() => {startHandler()}}>\n        <div className=\"start-button\"><div>Start</div></div>\n        <div className=\"repeat-button\"></div>\n      </div>\n    </div>\n  );\n}","interface ForStars {\n  currentWord: boolean[];\n}\n\nexport function Stars({currentWord}: ForStars) {\n\n  let stars = [];\n  for (let i = 0; i < currentWord.length; i++) {\n    if (currentWord[i]) {\n      stars.push(<img key={i.toString()} src=\"/english-4-kids/img/star-win.svg\" alt=\"ok\"/>);\n    } else stars.push(<img key={i.toString()} src=\"/english-4-kids/img/star.svg\" alt=\"ok\"/>);\n  }\n  return (\n    <div className=\"stars\">{stars}</div>\n  );\n}","import { useContext, useEffect, useState } from 'react';\nimport cards from '../../cards';\nimport AppModeContext from '../../context';\nimport { Card } from '../card/card';\nimport { StartRepeatButton } from '../start-repeat-button/start-repeat-button';\nimport { CardData } from '../../interfaces';\nimport { Stars } from '../stars/stars';\nimport './main-play-field.css';\nimport { mixArray } from '../../shared/mix-array';\nimport { playAudio } from '../../shared/play-audio';\nimport { Redirect } from 'react-router-dom';\n\nexport function MainPlayField({category}: {category: string}) {\n\n  const { appMode } = useContext(AppModeContext);\n\n  const [isGameStarted, setIsGameStarted] = useState(0);\n\n  const [currentWord, setcurrentWord] = useState([] as boolean[]);\n\n  const [mixedWords, mixWords] = useState([] as CardData[]);\n\n  const [gameResult, setGameResult] = useState('');\n\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    if (isGameStarted === 1) {\n      setIsGameStarted(0);\n    }\n    setcurrentWord([]);\n    setIndex(0);\n  }, [appMode, category]);\n\n  useEffect(() => {\n    if (index < 8) {\n      if (isGameStarted === 1) {\n      (async function() {\n        if (currentWord[currentWord.length - 1]) {\n          playAudio('/english-4-kids/audio/correct.mp3');\n          await setTimeout(()=>{\n            playAudio('/english-4-kids/' + mixedWords[index].audioSrc);\n          }, 1000);\n        } else {\n            playAudio('/english-4-kids/audio/error.mp3');\n        }\n      })();\n      }\n    } else {\n      let check = currentWord.every((elem) => {\n        if (elem) return true \n        else return false;\n      });\n      if (check) setGameResult('success');\n      else setGameResult('failure');\n      (async function() {\n        await setTimeout(()=>{\n          setIsGameStarted(2);\n        }, 1000);\n      })();\n    }\n  }, [currentWord]);\n\n  const cardsArr = (cards.slice(1)) as unknown as CardData[][];\n  const cardsData = cardsArr[+category];\n\n  useEffect(() => {\n    const cardsDataMix = mixArray(cardsData);\n    mixWords(cardsDataMix);\n  }, [category, appMode]);\n\n  const cardsComponentArr = cardsData.map((card, i) => {\n    return (\n      <Card \n        key={i}\n        card={card} \n        isGameStarted={isGameStarted} \n        cardsDataMix={mixedWords} \n        currentWord={currentWord} \n        setcurrentWord={setcurrentWord}\n        index={index}\n        setIndex={setIndex}\n        category={category}\n      />\n    );\n  });\n\n  return (\n    <main className=\"game-section\">\n      <div className=\"place-for-stars\"><Stars currentWord={currentWord}/></div>\n      <div className=\"cards-game-container\">\n        {cardsComponentArr}\n      </div>\n      <StartRepeatButton \n        appMode={appMode}\n        isGameStarted={isGameStarted} \n        startGame={setIsGameStarted} \n        currentWord={currentWord} \n        cardsDataMix={mixedWords}\n        index={index}\n      />\n      { isGameStarted === 2 ? <Redirect to={\"/english-4-kids/gameover/\" + gameResult} />: '' }\n    </main>\n  );\n}","import { CardData } from '../interfaces';\n\nexport function mixArray(arr: CardData[]): CardData[] {\n  const array = arr.slice(0);\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    let t = array[i]; \n    array[i] = array[j];\n    array[j] = t;\n  }\n  return array;\n}","import { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { playAudio } from \"../../shared/play-audio\";\n\nexport function SuccessPage ({result}: {result: string}) {\n  const [isForward, setisForward] = useState(false);\n\n  useEffect(() => {\n    (async function() {\n      playAudio(`/english-4-kids/audio/${result}.mp3`);\n      await setTimeout(() => {\n        setisForward(true);\n      }, 3000);\n    }())\n  }, []);\n\n  return (\n    <div>\n      <img src={\"/english-4-kids/img/\" + result + '.jpg'} alt={result} />\n      { isForward ? <Redirect to=\"/english-4-kids/\" /> : '' }\n    </div>\n  );\n}","import { useMemo, useState } from 'react';\nimport cards from '../../cards';\nimport { CardData } from '../../interfaces';\nimport './statistic.css';\n\ninterface LoccalStorageData {\n  [word: string]: {\n    [train: string]: number;\n  }\n}\nconst useSortableData = (items: { [category: string]: string; word: string; translation: string; train: string; success: string; error: string; percent: string; }[], config: null | {key: string; direction: string} = null) => {\n  const [sortConfig, setSortConfig] = useState(config);\n\n  const sortedItems = useMemo(() => {\n    let sortableItems = [...items];\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const requestSort = (key: string) => {\n    let direction = 'ascending';\n    if (\n      sortConfig &&\n      sortConfig.key === key &&\n      sortConfig.direction === 'ascending'\n    ) {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  return { items: sortedItems, requestSort, sortConfig };\n};\n\nexport function Statistic() {\n  const categories = cards[0] as string[];\n  const words = (cards.slice(1)) as unknown as CardData[][];\n  let arr: {\n    category: string;\n    word: string;\n    translation: string;\n    train: string;\n    success: string;\n    error: string;\n    percent: string\n  }[] = [];\n  for (let i = 0; i < categories.length; i++) {\n    for (let j = 0; j < words[i].length; j++) {\n      let train: string;\n      let success: string;\n      let error: string;\n      let percent: string;\n      if (localStorage.getItem(i.toString())) {\n        let data = (JSON.parse(localStorage.getItem(i.toString()) as string)) as LoccalStorageData;\n        if (data[words[i][j].word]) {\n          train = (data[words[i][j].word]['train']).toString();\n          success = (data[words[i][j].word]['success']).toString();\n          error = (data[words[i][j].word]['error']).toString();\n          percent = (((+success) / ((+success) + (+error))) * 100).toString();\n          percent = percent !== 'NaN'? percent: \"no data\";\n        } else {\n          train = '0';\n          success = '0';\n          error = '0';\n          percent = '0';\n        }\n      } else {\n        train = '0';\n        success = '0';\n        error = '0';\n        percent = '0';\n      }\n      let line = {\n        category: categories[i],\n        word: words[i][j].word,\n        translation: words[i][j].translation,\n        train,\n        success,\n        error,\n        percent,\n      }\n      arr.push(line);\n    }\n  }\n  const { items, requestSort, sortConfig } = useSortableData(arr);\n\n  const getClassNamesFor = (name: string) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  return (\n    <table>\n      <caption>Statistic</caption>\n      <thead>\n        <tr>\n          <th onClick={() => {requestSort('category')}} className={getClassNamesFor('category')}>Category</th>\n          <th onClick={() => {requestSort('word')}} className={getClassNamesFor('word')}>Word</th>\n          <th onClick={() => {requestSort('translation')}} className={getClassNamesFor('translation')}>Translation</th>\n          <th onClick={() => {requestSort('train')}} className={getClassNamesFor('train')}>Train</th>\n          <th onClick={() => {requestSort('success')}} className={getClassNamesFor('success')}>Success</th>\n          <th onClick={() => {requestSort('error')}} className={getClassNamesFor('error')}>Error</th>\n          <th>%</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map((word, i) => (\n          <tr key={i}>\n            <td>{word.category}</td>\n            <td>{word.word}</td>\n            <td>{word.translation}</td>\n            <td>{word.train}</td>\n            <td>{word.success}</td>\n            <td>{word.error}</td>\n            <td>{word.percent}</td>\n          </tr>\n        ))}\n      </tbody>\n  </table>\n  );\n}","import Header from './components/header/header';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { CategoryCard } from './components/category-card/category-card';\nimport { MainPlayField } from './components/main-play-field/main-play-field';\nimport { SuccessPage } from './components/success-page/success-page';\nimport { Statistic } from './components/statistic/statistic';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/english-4-kids/\" component={CategoryCard} />\n          <Route exact path=\"/english-4-kids/game/:category\" render={({match})=> <MainPlayField category={match.params.category}/>}  />\n          <Route exact path=\"/english-4-kids/gameover/:success\" render={({match}) => <SuccessPage result={match.params.success} />} />\n          <Route exact path=\"/english-4-kids/statistic\" component={Statistic} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport AppModeContext from './context';\n\nfunction Main() {\n  const [appMode, setAppMode] = useState(false);\n\n  return (\n    <React.StrictMode>\n      <AppModeContext.Provider value={{appMode, setAppMode}}>\n        <App />\n      </AppModeContext.Provider>\n    </React.StrictMode>\n  );\n}\n\nReactDOM.render(\n  <Main />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}